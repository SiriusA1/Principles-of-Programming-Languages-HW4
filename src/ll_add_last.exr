
(* Add Last exercise *)

let l1 = { head <= 0; size <= 0} (* 0 in head signals null *)
in letrec add_last_helper (node) =
   if number?(node.next)
   then node.next <= {data <= 7; next <= 0}
   else (add_last_helper node.next)
in let add_last = proc (ll) { proc (x) { 
  begin 
    (add_last_helper ll.head);
    ll.size <= ll.size+1
  end 
} }
in begin
     ((add_last l1) 2);
     ((add_last l1) 3);
     ((add_last l1) 4);
     debug(l1)  (* required inspect the list *)
   end